ppackage org.example.Resources;
 
import jakarta.ws.rs.*;
import jakarta.ws.rs.core.MediaType;
import jakarta.ws.rs.core.Response;
import org.example.Model.Cliente;
import org.example.Service.ClienteServico;
 
import java.sql.SQLException;
import java.util.List;
 
@Path("myresource") // Base URI
public class ClienteResource {
 
    private final ClienteServico clienteServico = new ClienteServico();
 
    @GET
    @Path("buscarTodos")
    @Produces(MediaType.APPLICATION_JSON)
    public Response buscarTodos() {
        try {
            List<Cliente> listaClientes = clienteServico.buscarTodos();
            return Response.ok(listaClientes).build();
        } catch (SQLException e) {
            return Response.status(Response.Status.BAD_REQUEST).entity(e.getMessage()).build();
        }
    }
 
    @POST
    @Path("adicionar")
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.TEXT_PLAIN)
    public Response adicionar(Cliente cliente) {
        try {
            clienteServico.adicionar(cliente);
            return Response.ok("Cliente adicionado com sucesso").build();
        } catch (SQLException e) {
            return Response.status(Response.Status.BAD_REQUEST).entity(e.getMessage()).build();
        }
    }
 
    @PUT
    @Path("atualizaDados")
    @Produces(MediaType.TEXT_PLAIN)
    public Response atualizaDados(@QueryParam("id") int id, @QueryParam("nome") String nome) {
        try {
            clienteServico.atualizaDados(id, nome);
            return Response.ok("Atualizado com sucesso!").build();
        } catch (SQLException e) {
            return Response.status(Response.Status.BAD_REQUEST).entity(e.getMessage()).build();
        }
    }
 
    @DELETE
    @Path("deleta")
    @Produces(MediaType.TEXT_PLAIN)
    public Response deleta(@QueryParam("id") int id) {
        try {
            clienteServico.deletar(id);
            return Response.ok("Deletado com sucesso").build();
        } catch (SQLException e) {
            return Response.status(Response.Status.BAD_REQUEST).entity(e.getMessage()).build();
        }
    }
}